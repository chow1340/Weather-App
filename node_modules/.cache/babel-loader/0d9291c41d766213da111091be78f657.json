{"ast":null,"code":"var _jsxFileName = \"/home/jeffrey/Weather-App/src/SearchBar.js\";\nimport React from 'react';\nimport Script, { geocodeByAddress, getLatLng } from 'react-load-script';\n/*global google*/\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScriptLoad = () => {\n      const options = {\n        types: ['(cities)']\n      };\n      this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options);\n      this.autocomplete.setFields(['address_components', 'formatted_address', 'geometry']);\n      this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n    };\n\n    this.handlePlaceSelect = () => {\n      const addressObject = this.autocomplete.getPlace();\n      const address = addressObject.address_components;\n      console.log(address);\n\n      if (address) {\n        this.setState({\n          city: address[0].long_name,\n          query: addressObject.formatted_address\n        });\n      }\n    };\n\n    this.state = {\n      city: '',\n      query: ''\n    };\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Script, {\n      url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCnqBcICpcIUF4OcyIjqIEoIMXYOXqZnG8&libraries=places\",\n      onLoad: this.handleScriptLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePlaceSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"search-text\",\n      type: \"textbox\",\n      id: \"autocomplete\",\n      placeholder: \"Type your city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" submit\"))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/SearchBar.js"],"names":["React","Script","geocodeByAddress","getLatLng","Search","Component","constructor","props","handleScriptLoad","options","types","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address","address_components","console","log","setState","city","long_name","query","formatted_address","state","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,mBAHP;AAIA;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,gBAZmB,GAYA,MAAM;AACvB,YAAMC,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAE,CAAC,UAAD;AADO,OAAhB;AAIC,WAAKC,YAAL,GAAoB,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACnBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADmB,EAEnBR,OAFmB,CAApB;AAMD,WAAKE,YAAL,CAAkBO,SAAlB,CAA4B,CAAC,oBAAD,EAAuB,mBAAvB,EAA4C,UAA5C,CAA5B;AAGA,WAAKP,YAAL,CAAkBQ,WAAlB,CAA8B,eAA9B,EAA+C,KAAKC,iBAApD;AACD,KA3BkB;;AAAA,SA6BnBA,iBA7BmB,GA6BC,MAAM;AAGxB,YAAMC,aAAa,GAAG,KAAKV,YAAL,CAAkBW,QAAlB,EAAtB;AACA,YAAMC,OAAO,GAAGF,aAAa,CAACG,kBAA9B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAEA,UAAIA,OAAJ,EAAa;AAEX,aAAKI,QAAL,CACE;AACEC,UAAAA,IAAI,EAAEL,OAAO,CAAC,CAAD,CAAP,CAAWM,SADnB;AAEEC,UAAAA,KAAK,EAAET,aAAa,CAACU;AAFvB,SADF;AAMD;AACF,KA7CkB;;AAGjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,EADK;AAEXE,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKV,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBa,IAAvB,CAA4B,IAA5B,CAAzB;AAED;;AAsCDC,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAC,sGADN;AAEE,MAAA,MAAM,EAAE,KAAK1B,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,QAAQ,EAAI,KAAKY,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAG,aAAnB;AAAgC,MAAA,IAAI,EAAG,SAAvC;AAAiD,MAAA,EAAE,EAAC,cAApD;AAAmE,MAAA,WAAW,EAAC,gBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADA,CALF,CADF;AAgBD;;AAlE8B;;AAqErC,eAAehB,MAAf","sourcesContent":["import React from 'react'\n\nimport Script, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-load-script';\n/*global google*/\n\nclass Search extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        city: '',\n        query: ''\n      };\n      \n      this.handlePlaceSelect = this.handlePlaceSelect.bind(this)\n  \n    }\n  \n    handleScriptLoad = () => {\n      const options = {\n        types: ['(cities)'],\n      };\n  \n       this.autocomplete = new google.maps.places.Autocomplete(\n        document.getElementById('autocomplete'),\n        options,\n      );\n  \n      \n      this.autocomplete.setFields(['address_components', 'formatted_address', 'geometry']);\n  \n      \n      this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n    }\n    \n    handlePlaceSelect = () => {\n  \n      \n      const addressObject = this.autocomplete.getPlace();\n      const address = addressObject.address_components;\n      console.log(address)\n      \n      if (address) {\n        \n        this.setState(\n          {\n            city: address[0].long_name,\n            query: addressObject.formatted_address,\n          }\n        );\n      }\n    }\n    \n  \n    render() {\n        return (\n          <div>\n            <Script\n              url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCnqBcICpcIUF4OcyIjqIEoIMXYOXqZnG8&libraries=places\"\n              onLoad={this.handleScriptLoad}\n            />\n            <div className = 'search-box'>\n            <form onSubmit = {this.handlePlaceSelect}>\n              <input className = 'search-text'type = 'textbox' id=\"autocomplete\" placeholder=\"Type your city\"  \n              />\n              <button> submit</button>\n            </form>\n            \n            </div>\n          </div>\n        );\n      }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}