{"ast":null,"code":"var _jsxFileName = \"/home/jeffrey/Weather-App/src/Display.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherDisplay from './WeatherDisplay';\n/* global google*/\n\nclass Display extends React.Component {\n  constructor() {\n    super();\n\n    this.callbackFunction = childData => {\n      this.setState({\n        message: childData\n      });\n    };\n\n    this.handleScriptLoad = () => {\n      const options = {\n        types: ['(cities)']\n      };\n      this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options);\n      this.autocomplete.setFields(['geometry']); //limit field to geometry\n    };\n\n    this.handleSubmit = event => {\n      const addressObject = this.autocomplete.getPlace();\n      const address = addressObject.address_components;\n      this.setState({\n        lat: addressObject.geometry.location.lat(),\n        lng: addressObject.geometry.location.lng()\n      });\n      console.log(addressObject.geometry.location.lng());\n      event.preventDefault();\n    };\n\n    this.state = {\n      temperature: '10',\n      humidity: '0.65',\n      precipType: 'rain',\n      precipProbability: '0.9',\n      wind: '5.59',\n      summary: 'bad',\n      lat: '10',\n      long: '11',\n      city: '',\n      query: '',\n      message: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleScriptLoad = this.handleScriptLoad.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      handleSubmit: this.handleSubmit,\n      handleScriptLoad: this.handleScriptLoad,\n      parentCallback: this.callbackFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(WeatherDisplay, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.childData));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/Display.js"],"names":["React","SearchBar","WeatherDisplay","Display","Component","constructor","callbackFunction","childData","setState","message","handleScriptLoad","options","types","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","handleSubmit","event","addressObject","getPlace","address","address_components","lat","geometry","location","lng","console","log","preventDefault","state","temperature","humidity","precipType","precipProbability","wind","summary","long","city","query","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,GAAI;AACX;;AADW,SAmBfC,gBAnBe,GAmBKC,SAAD,IAAe;AAChC,WAAKC,QAAL,CAAe;AAACC,QAAAA,OAAO,EAAEF;AAAV,OAAf;AACD,KArBc;;AAAA,SAwCfG,gBAxCe,GAwCI,MAAM;AACrB,YAAMC,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAE,CAAC,UAAD;AADO,OAAhB;AAIC,WAAKC,YAAL,GAAoB,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACnBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADmB,EAEnBR,OAFmB,CAApB;AAID,WAAKE,YAAL,CAAkBO,SAAlB,CAA4B,CAAC,UAAD,CAA5B,EATqB,CASqB;AAG3C,KApDY;;AAAA,SAuDbC,YAvDa,GAuDGC,KAAD,IAAW;AACxB,YAAMC,aAAa,GAAG,KAAKV,YAAL,CAAkBW,QAAlB,EAAtB;AACA,YAAMC,OAAO,GAAGF,aAAa,CAACG,kBAA9B;AAEE,WAAKlB,QAAL,CACE;AAEEmB,QAAAA,GAAG,EAAEJ,aAAa,CAACK,QAAd,CAAuBC,QAAvB,CAAgCF,GAAhC,EAFP;AAGEG,QAAAA,GAAG,EAAEP,aAAa,CAACK,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC;AAHP,OADF;AASFC,MAAAA,OAAO,CAACC,GAAR,CAAaT,aAAa,CAACK,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC,EAAb;AACAR,MAAAA,KAAK,CAACW,cAAN;AAED,KAvEY;;AAEX,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAG,IADL;AAETC,MAAAA,QAAQ,EAAE,MAFD;AAGTC,MAAAA,UAAU,EAAE,MAHH;AAITC,MAAAA,iBAAiB,EAAE,KAJV;AAKTC,MAAAA,IAAI,EAAE,MALG;AAMTC,MAAAA,OAAO,EAAE,KANA;AAOTb,MAAAA,GAAG,EAAE,IAPI;AAQTc,MAAAA,IAAI,EAAE,IARG;AASTC,MAAAA,IAAI,EAAE,EATG;AAUTC,MAAAA,KAAK,EAAE,EAVE;AAWTlC,MAAAA,OAAO,EAAE;AAXA,KAAb;AAcA,SAAKY,YAAL,GAAoB,KAAKA,YAAL,CAAkBuB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKlC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBkC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAuDDC,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACD,MAAA,YAAY,EAAG,KAAKxB,YADnB;AAED,MAAA,gBAAgB,EAAI,KAAKX,gBAFxB;AAGD,MAAA,cAAc,EAAI,KAAKJ,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,cAAD;AACI,MAAA,IAAI,EAAI,KAAK4B,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKA,KAAL,CAAW3B,SAAf,CATJ,CADJ;AAaH;;AAxFgC;;AA2FrC,eAAeJ,OAAf","sourcesContent":["import React from 'react'\nimport SearchBar from './SearchBar'\nimport WeatherDisplay from './WeatherDisplay'\n/* global google*/\n\nclass Display extends React.Component{\n    constructor () {\n        super()\n        this.state = {\n            temperature : '10',\n            humidity: '0.65',\n            precipType: 'rain',\n            precipProbability: '0.9',\n            wind: '5.59',\n            summary: 'bad',\n            lat: '10',\n            long: '11',\n            city: '',\n            query: '',\n            message: '',\n            \n        }\n        this.handleSubmit = this.handleSubmit.bind(this) \n        this.handleScriptLoad = this.handleScriptLoad.bind(this)\n    }\n    callbackFunction = (childData) => {\n      this.setState ({message: childData})\n    }\n\n     /*componentDidMount () {\n        fetch ('https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/42.3601,42.3601')\n        .then (results => results.json())\n        .then (response => {\n            this.setState ({\n                temperature: response.currently.data,\n                humidity: response.currently.humidity,\n                wind: response.currently.windSpeed,\n                icon: response.currently.icon,\n                precipType: response.currently.precipType,  \n                precipProbability: response.currently.precipProbability,\n                summary: response.currently.summary,\n\n            })\n            console.log(response)\n        })\n    } */\n    handleScriptLoad = () => {\n        const options = {\n          types: ['(cities)'],\n        };\n    \n         this.autocomplete = new google.maps.places.Autocomplete(\n          document.getElementById('autocomplete'),\n          options,\n        );\n        this.autocomplete.setFields(['geometry']) //limit field to geometry\n  \n        \n      }\n      \n      \n      handleSubmit = (event) => {\n        const addressObject = this.autocomplete.getPlace();\n        const address = addressObject.address_components;\n        \n          this.setState(\n            {\n             \n              lat: addressObject.geometry.location.lat(),\n              lng: addressObject.geometry.location.lng(),\n            }\n          );\n          \n        \n        console.log (addressObject.geometry.location.lng())\n        event.preventDefault()\n        \n      }\n      \n    render () {\n        return (\n            <div>\n                <SearchBar \n               handleSubmit ={this.handleSubmit}\n               handleScriptLoad = {this.handleScriptLoad}\n               parentCallback = {this.callbackFunction} />\n                <WeatherDisplay \n                    data = {this.state}\n                />\n                \n                <p>{this.state.childData}</p>\n            </div>\n        )\n    }\n}\n\nexport default Display"]},"metadata":{},"sourceType":"module"}