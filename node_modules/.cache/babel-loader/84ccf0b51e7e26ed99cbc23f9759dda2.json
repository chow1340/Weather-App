{"ast":null,"code":"var _jsxFileName = \"/home/jeffrey/Weather-App/src/WeatherDisplay.js\";\nimport React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\n\nfunction WeatherDisplay(props) {\n  const displayIcon = () => {\n    if (props.data.icon !== null) {\n      return props.data.icon.replace(/-/g, '_').toUpperCase();\n    }\n  };\n\n  const defaults = {\n    icon: {\n      displayIcon\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" \", props.data.summary, \" \"), React.createElement(\"div\", {\n    className: \"weatherContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"weatherGrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"temperature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, Math.round(5 / 9 * (props.data.temperature - 32)), \" \\xB0C \"), React.createElement(\"p\", {\n    className: \"humidity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Humidity : \", props.data.humidity)), React.createElement(\"div\", {\n    className: \"col2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.data.icon, React.createElement(ReactAnimatedWeather, {\n    icon: defaults.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), console.log(displayIcon()))), React.createElement(\"div\", {\n    className: \"col3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"precipType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Precipitation type: \", props.data.precipType), React.createElement(\"p\", {\n    className: \"precipProbability\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Probability of precipitation: \", props.data.precipProbability), React.createElement(\"p\", {\n    className: \"wind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Windspeed: \", props.data.wind)))));\n}\n\nexport default WeatherDisplay;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/WeatherDisplay.js"],"names":["React","ReactAnimatedWeather","WeatherDisplay","props","displayIcon","data","icon","replace","toUpperCase","defaults","summary","Math","round","temperature","humidity","console","log","precipType","precipProbability","wind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAID,KAAK,CAACE,IAAN,CAAWC,IAAX,KAAoB,IAAxB,EAA8B;AAC1B,aAAOH,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBC,OAAhB,CAAwB,IAAxB,EAA6B,GAA7B,EAAkCC,WAAlC,EAAP;AAAuD;AAC9D,GAHD;;AAIA,QAAMC,QAAQ,GAAG;AACbH,IAAAA,IAAI,EAAE;AAACF,MAAAA;AAAD;AADO,GAAjB;AAII,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BD,KAAK,CAACE,IAAN,CAAWK,OAAxC,MAFJ,EAGI;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAG,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BC,IAAI,CAACC,KAAL,CAAY,IAAE,CAAH,IAAOT,KAAK,CAACE,IAAN,CAAWQ,WAAX,GAAuB,EAA9B,CAAX,CAA9B,YADJ,EAEI;AAAG,IAAA,SAAS,EAAG,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCV,KAAK,CAACE,IAAN,CAAWS,QAAjD,CAFJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBX,KAAK,CAACE,IAAN,CAAWC,IAApC,EACA,oBAAC,oBAAD;AACA,IAAA,IAAI,EAAIG,QAAQ,CAACH,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKCS,OAAO,CAACC,GAAR,CAAYZ,WAAW,EAAvB,CALD,CAFJ,CANJ,EAkBI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAiDD,KAAK,CAACE,IAAN,CAAWY,UAA5D,CADJ,EAEI;AAAG,IAAA,SAAS,EAAG,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAkEd,KAAK,CAACE,IAAN,CAAWa,iBAA7E,CAFJ,EAGI;AAAG,IAAA,SAAS,EAAG,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCf,KAAK,CAACE,IAAN,CAAWc,IAA7C,CAHJ,CAlBJ,CADJ,CAHJ,CADJ;AAoCP;;AAKD,eAAejB,cAAf","sourcesContent":["import React from 'react'\nimport ReactAnimatedWeather from 'react-animated-weather'\n\nfunction WeatherDisplay(props) {\n    const displayIcon = () => { \n        if (props.data.icon !== null) {\n            return props.data.icon.replace(/-/g,'_').toUpperCase()}\n    }\n    const defaults = {\n        icon: {displayIcon}\n    }\n    \n        return (\n            <div>\n                \n                <div className = 'summary'> {props.data.summary} </div>\n                <div className = 'weatherContainer'>\n                    <div className = 'weatherGrid'>\n                        <div className = 'col1'> \n                            <p className = 'temperature'>{Math.round((5/9)*(props.data.temperature-32))} Â°C </p>\n                            <p className = 'humidity'>Humidity : {props.data.humidity}</p> \n                        </div>\n                        \n                        <div className = 'col2'>\n                            \n                            <div className = 'icon'>{props.data.icon} \n                            <ReactAnimatedWeather \n                            icon = {defaults.icon}\n                            />\n                            \n                            {console.log(displayIcon())}\n                            \n                            </div>\n                            </div>\n                        \n                        <div className = 'col3'>\n                            <p className = 'precipType'>Precipitation type: {props.data.precipType}</p>\n                            <p className = 'precipProbability'>Probability of precipitation: {props.data.precipProbability}</p>\n                            <p className = 'wind'>Windspeed: {props.data.wind}</p>\n                        </div>\n                        \n                    </div>\n                </div>\n             </div>\n             \n             \n        )\n\n}\n\n\n\n\nexport default WeatherDisplay\n\n"]},"metadata":{},"sourceType":"module"}