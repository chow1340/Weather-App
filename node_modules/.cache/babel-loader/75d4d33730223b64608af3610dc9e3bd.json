{"ast":null,"code":"var _jsxFileName = \"/home/jeffrey/Weather-App/src/SearchBar.js\";\nimport React from 'react';\nimport Script from 'react-load-script';\n/*global google*/\n\nfunction Search(props) {\n  /*constructor(props) {\n    super(props);\n       this.state = {\n      city: '',\n      query: '',\n      lat: '2',\n      lng: '3'\n    };\n    \n   this.handleSubmit = this.handleSubmit.bind(this) \n     } */\n  handleScriptLoad = () => {\n    const options = {\n      types: ['(cities)']\n    };\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options);\n    this.autocomplete.setFields(['geometry']); //limit field to geometry\n  };\n  /*handleSubmit = (event) => {\n    const addressObject = this.autocomplete.getPlace();\n    \n    \n      this.setState(\n        {\n         \n          \n          lat: addressObject.geometry.location.lat(),\n          lng: addressObject.geometry.location.lng(),\n        }\n      );\n      \n    \n    console.log (addressObject.geometry.location.lng())\n    event.preventDefault()\n    \n  } */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Script, {\n    url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCnqBcICpcIUF4OcyIjqIEoIMXYOXqZnG8&libraries=places\",\n    onLoad: this.handleScriptLoad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-text\",\n    type: \"textbox\",\n    id: \"autocomplete\",\n    placeholder: \"Type your city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \" submit\"))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/SearchBar.js"],"names":["React","Script","Search","props","handleScriptLoad","options","types","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAEO,mBAFP;AAGA;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB;;;;;;;;;;;AAcAC,EAAAA,gBAAgB,GAAG,MAAM;AACvB,UAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE,CAAC,UAAD;AADO,KAAhB;AAIC,SAAKC,YAAL,GAAoB,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACnBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADmB,EAEnBR,OAFmB,CAApB;AAID,SAAKE,YAAL,CAAkBO,SAAlB,CAA4B,CAAC,UAAD,CAA5B,EATuB,CASmB;AAG3C,GAZD;AAcA;;;;;;;;;;;;;;;;;;;;AAqBI,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAC,sGADN;AAEE,IAAA,MAAM,EAAE,KAAKV,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,QAAQ,EAAI,KAAKD,KAAL,CAAWY,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAG,aAAnB;AAAgC,IAAA,IAAI,EAAG,SAAvC;AAAiD,IAAA,EAAE,EAAC,cAApD;AAAmE,IAAA,WAAW,EAAC,gBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADA,CALF,CADF;AAkBP;;AAGD,eAAeb,MAAf","sourcesContent":["import React from 'react'\n\nimport Script, {\n  \n} from 'react-load-script';\n/*global google*/\n\nfunction Search(props) {\n    /*constructor(props) {\n      super(props);\n  \n      this.state = {\n        city: '',\n        query: '',\n        lat: '2',\n        lng: '3'\n      };\n      \n     this.handleSubmit = this.handleSubmit.bind(this) \n  \n    } */\n  \n    handleScriptLoad = () => {\n      const options = {\n        types: ['(cities)'],\n      };\n  \n       this.autocomplete = new google.maps.places.Autocomplete(\n        document.getElementById('autocomplete'),\n        options,\n      );\n      this.autocomplete.setFields(['geometry']) //limit field to geometry\n\n      \n    }\n    \n    /*handleSubmit = (event) => {\n      const addressObject = this.autocomplete.getPlace();\n      \n      \n        this.setState(\n          {\n           \n            \n            lat: addressObject.geometry.location.lat(),\n            lng: addressObject.geometry.location.lng(),\n          }\n        );\n        \n      \n      console.log (addressObject.geometry.location.lng())\n      event.preventDefault()\n      \n    } */\n    \n  \n    \n        return (\n          <div>\n            <Script\n              url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCnqBcICpcIUF4OcyIjqIEoIMXYOXqZnG8&libraries=places\"\n              onLoad={this.handleScriptLoad}\n            />\n            <div className = 'search-box'>\n            <form onSubmit = {this.props.handleSubmit}>\n              <input className = 'search-text'type = 'textbox' id=\"autocomplete\" placeholder=\"Type your city\"  \n              />\n              <button> submit</button>\n              \n            </form>\n              \n            </div>\n          </div>\n        );\n      \n}\n\n\nexport default Search"]},"metadata":{},"sourceType":"module"}