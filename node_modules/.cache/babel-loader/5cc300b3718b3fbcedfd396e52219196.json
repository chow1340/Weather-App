{"ast":null,"code":"var _jsxFileName = \"/home/jeffrey/Weather-App/src/Display.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherDisplay from './WeatherDisplay';\n\nclass Display extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      temperature: '10',\n      humidity: '',\n      precipType: '',\n      precipProbability: '',\n      wind: 'alot',\n      summary: 'bad'\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/42.3601,42.3601').then(results => results.json()).then(response => {\n      this.setState({\n        temperature: response.currently.data,\n        humidity: response.currently.humidity,\n        wind: response.currently.windSpeed,\n        icon: response.currently.icon,\n        precipType: response.currently.precipType,\n        precipProbability: response.currently.precipProbability,\n        summary: response.currently.summary\n      });\n      console.log(response);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(WeatherDisplay, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/Display.js"],"names":["React","SearchBar","WeatherDisplay","Display","Component","constructor","state","temperature","humidity","precipType","precipProbability","wind","summary","componentDidMount","fetch","then","results","json","response","setState","currently","data","windSpeed","icon","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,GAAI;AACX;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAG,IADL;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,iBAAiB,EAAE,EAJV;AAKTC,MAAAA,IAAI,EAAE,MALG;AAMTC,MAAAA,OAAO,EAAE;AANA,KAAb;AASH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,KAAK,CAAE,uHAAF,CAAL,CACCC,IADD,CACOC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADlB,EAECF,IAFD,CAEOG,QAAQ,IAAI;AACf,WAAKC,QAAL,CAAe;AACXZ,QAAAA,WAAW,EAAEW,QAAQ,CAACE,SAAT,CAAmBC,IADrB;AAEXb,QAAAA,QAAQ,EAAEU,QAAQ,CAACE,SAAT,CAAmBZ,QAFlB;AAGXG,QAAAA,IAAI,EAAEO,QAAQ,CAACE,SAAT,CAAmBE,SAHd;AAIXC,QAAAA,IAAI,EAAEL,QAAQ,CAACE,SAAT,CAAmBG,IAJd;AAKXd,QAAAA,UAAU,EAAES,QAAQ,CAACE,SAAT,CAAmBX,UALpB;AAMXC,QAAAA,iBAAiB,EAAEQ,QAAQ,CAACE,SAAT,CAAmBV,iBAN3B;AAOXE,QAAAA,OAAO,EAAEM,QAAQ,CAACE,SAAT,CAAmBR;AAPjB,OAAf;AAUAY,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,KAdD;AAeH;;AAEDQ,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,cAAD;AACI,MAAA,IAAI,EAAI,KAAKpB,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAzCgC;;AA4CrC,eAAeH,OAAf","sourcesContent":["import React from 'react'\nimport SearchBar from './SearchBar'\nimport WeatherDisplay from './WeatherDisplay'\n\nclass Display extends React.Component{\n    constructor () {\n        super()\n        this.state = {\n            temperature : '10',\n            humidity: '',\n            precipType: '',\n            precipProbability: '',\n            wind: 'alot',\n            summary: 'bad',\n            \n        }\n    }\n\n    componentDidMount () {\n        fetch ('https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/42.3601,42.3601')\n        .then (results => results.json())\n        .then (response => {\n            this.setState ({\n                temperature: response.currently.data,\n                humidity: response.currently.humidity,\n                wind: response.currently.windSpeed,\n                icon: response.currently.icon,\n                precipType: response.currently.precipType,  \n                precipProbability: response.currently.precipProbability,\n                summary: response.currently.summary,\n\n            })\n            console.log(response)\n        })\n    }\n\n    render () {\n        return (\n            <div>\n                <SearchBar />\n                <WeatherDisplay \n                    data = {this.state}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Display"]},"metadata":{},"sourceType":"module"}