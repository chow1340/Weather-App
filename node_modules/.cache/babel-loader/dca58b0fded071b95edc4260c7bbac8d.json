{"ast":null,"code":"import _classCallCheck from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import SearchBar from'./SearchBar';import WeatherDisplay from'./WeatherDisplay';var Display=/*#__PURE__*/function(_React$Component){_inherits(Display,_React$Component);function Display(){var _this;_classCallCheck(this,Display);_this=_possibleConstructorReturn(this,_getPrototypeOf(Display).call(this));_this.update=function(_ref){var lat=_ref.lat,lng=_ref.lng;_this.setState({lat:lat,lng:lng});};_this.state={temperature:'',humidity:'',precipType:'',precipProbability:'',wind:'',summary:'',lat:'',lng:'',icon:'CLEAR_DAY'};return _this;}_createClass(Display,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this2=this;if(prevState.lat!==this.state.lat){console.log(prevProps);var lat=this.state.lat;var lng=this.state.lng;fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/\".concat(lat,\",\").concat(lng)).then(function(results){return results.json();}).then(function(response){_this2.setState({temperature:response.currently.temperature,humidity:response.currently.humidity,wind:response.currently.windSpeed,icon:response.currently.icon,precipType:response.currently.precipType,precipProbability:response.currently.precipProbability,summary:response.currently.summary});console.log(response);console.log(lat,lng);});}else{console.log('error',prevProps.lat,this.props.data);}}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(SearchBar,{update:this.update}),React.createElement(WeatherDisplay,{data:this.state}));}}]);return Display;}(React.Component);export default Display;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/Display.js"],"names":["React","SearchBar","WeatherDisplay","Display","update","lat","lng","setState","state","temperature","humidity","precipType","precipProbability","wind","summary","icon","prevProps","prevState","console","log","fetch","then","results","json","response","currently","windSpeed","props","data","Component"],"mappings":"0iBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,GAEMC,CAAAA,O,6EACF,kBAAe,yCACX,2EADW,MAiBfC,MAjBe,CAiBN,cAAe,IAAbC,CAAAA,GAAa,MAAbA,GAAa,CAATC,GAAS,MAATA,GAAS,CACpB,MAAKC,QAAL,CAAc,CACVF,GAAG,CAAHA,GADU,CACNC,GAAG,CAAHA,GADM,CAAd,EAGH,CArBc,CAEX,MAAKE,KAAL,CAAa,CACTC,WAAW,CAAG,EADL,CAETC,QAAQ,CAAE,EAFD,CAGTC,UAAU,CAAE,EAHH,CAITC,iBAAiB,CAAE,EAJV,CAKTC,IAAI,CAAE,EALG,CAMTC,OAAO,CAAE,EANA,CAOTT,GAAG,CAAE,EAPI,CAQTC,GAAG,CAAE,EARI,CASTS,IAAI,CAAE,WATG,CAAb,CAFW,aAcd,C,kFASkBC,S,CAAUC,S,CAAW,iBACpC,GAAIA,SAAS,CAACZ,GAAV,GAAkB,KAAKG,KAAL,CAAWH,GAAjC,CAAsC,CAClCa,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAEA,GAAMX,CAAAA,GAAG,CAAG,KAAKG,KAAL,CAAWH,GAAvB,CACA,GAAMC,CAAAA,GAAG,CAAG,KAAKE,KAAL,CAAWF,GAAvB,CAEJc,KAAK,iHAA2Gf,GAA3G,aAAkHC,GAAlH,EAAL,CACCe,IADD,CACO,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAR,EAAJ,EADd,EAECF,IAFD,CAEO,SAAAG,QAAQ,CAAI,CACf,MAAI,CAACjB,QAAL,CAAe,CACXE,WAAW,CAAEe,QAAQ,CAACC,SAAT,CAAmBhB,WADrB,CAEXC,QAAQ,CAAEc,QAAQ,CAACC,SAAT,CAAmBf,QAFlB,CAGXG,IAAI,CAAEW,QAAQ,CAACC,SAAT,CAAmBC,SAHd,CAIXX,IAAI,CAAES,QAAQ,CAACC,SAAT,CAAmBV,IAJd,CAKXJ,UAAU,CAAEa,QAAQ,CAACC,SAAT,CAAmBd,UALpB,CAMXC,iBAAiB,CAAEY,QAAQ,CAACC,SAAT,CAAmBb,iBAN3B,CAOXE,OAAO,CAAEU,QAAQ,CAACC,SAAT,CAAmBX,OAPjB,CAAf,EAUAI,OAAO,CAACC,GAAR,CAAYK,QAAZ,EACAN,OAAO,CAACC,GAAR,CAAYd,GAAZ,CAAgBC,GAAhB,EAEH,CAhBD,EAiBH,CAvBG,IAuBG,CAACY,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBH,SAAS,CAACX,GAA/B,CAAoC,KAAKsB,KAAL,CAAWC,IAA/C,EAAqD,CAC5D,C,uCAES,CACN,MACI,gCACI,oBAAC,SAAD,EACA,MAAM,CAAI,KAAKxB,MADf,EADJ,CAII,oBAAC,cAAD,EACI,IAAI,CAAI,KAAKI,KADjB,EAJJ,CADJ,CAYH,C,qBAhEiBR,KAAK,CAAC6B,S,EAmE5B,cAAe1B,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport SearchBar from './SearchBar'\nimport WeatherDisplay from './WeatherDisplay'\n\nclass Display extends React.Component{\n    constructor () {\n        super()\n        this.state = {\n            temperature : '',\n            humidity: '',\n            precipType: '',\n            precipProbability: '',\n            wind: '',\n            summary: '',\n            lat: '',\n            lng: '',\n            icon: 'CLEAR_DAY',\n            \n        }\n    }\n\n     \n    update = ({lat,lng}) => {\n        this.setState({\n            lat,lng\n        })\n    }\n    \n    componentDidUpdate(prevProps,prevState) {\n        if (prevState.lat !== this.state.lat) {\n            console.log(prevProps)    \n\n            const lat = this.state.lat;\n            const lng = this.state.lng;\n         \n        fetch (`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/${lat},${lng}`)\n        .then (results => results.json())\n        .then (response => {\n            this.setState ({\n                temperature: response.currently.temperature,\n                humidity: response.currently.humidity,\n                wind: response.currently.windSpeed,\n                icon: response.currently.icon,\n                precipType: response.currently.precipType,  \n                precipProbability: response.currently.precipProbability,\n                summary: response.currently.summary,\n\n            })\n            console.log(response)\n            console.log(lat,lng)\n            \n        })\n    } else {console.log('error', prevProps.lat, this.props.data)}\n    } \n    \n    render () {\n        return (\n            <div>\n                <SearchBar \n                update = {this.update} \n                />\n                <WeatherDisplay \n                    data = {this.state}\n                />\n                \n            </div>\n            \n        )\n    }\n}\n\nexport default Display"]},"metadata":{},"sourceType":"module"}