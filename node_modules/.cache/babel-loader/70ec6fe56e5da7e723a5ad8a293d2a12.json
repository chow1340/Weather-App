{"ast":null,"code":"var _jsxFileName = \"/home/jeffrey/Weather-App/src/Display.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport WeatherDisplay from './WeatherDisplay';\n\nclass Display extends React.Component {\n  constructor() {\n    super();\n\n    this.update = ({\n      lat,\n      lng\n    }) => {\n      this.setState({\n        lat,\n        lng\n      });\n    };\n\n    this.state = {\n      temperature: '10',\n      humidity: '0.65',\n      precipType: 'rain',\n      precipProbability: '0.9',\n      wind: '5.59',\n      summary: 'bad',\n      lat: '10',\n      lng: '11'\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.lat !== prevProps.lat) {\n      const lat = this.state.lat;\n      const lng = this.state.lng;\n      fetch(\"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/\".concat(lat, \",\").concat(lng)).then(results => results.json()).then(response => {\n        this.setState({\n          temperature: response.currently.temperature,\n          humidity: response.currently.humidity,\n          wind: response.currently.windSpeed,\n          icon: response.currently.icon,\n          precipType: response.currently.precipType,\n          precipProbability: response.currently.precipProbability,\n          summary: response.currently.summary\n        });\n        console.log(response);\n        console.log(lat, lng);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      update: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(WeatherDisplay, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", this.state.lat, \" \"));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/Display.js"],"names":["React","SearchBar","WeatherDisplay","Display","Component","constructor","update","lat","lng","setState","state","temperature","humidity","precipType","precipProbability","wind","summary","componentDidUpdate","prevProps","props","fetch","then","results","json","response","currently","windSpeed","icon","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,GAAI;AACX;;AADW,SAgBfC,MAhBe,GAgBN,CAAC;AAACC,MAAAA,GAAD;AAAKC,MAAAA;AAAL,KAAD,KAAe;AACpB,WAAKC,QAAL,CAAc;AACVF,QAAAA,GADU;AACNC,QAAAA;AADM,OAAd;AAGH,KApBc;;AAEX,SAAKE,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAG,IADL;AAETC,MAAAA,QAAQ,EAAE,MAFD;AAGTC,MAAAA,UAAU,EAAE,MAHH;AAITC,MAAAA,iBAAiB,EAAE,KAJV;AAKTC,MAAAA,IAAI,EAAE,MALG;AAMTC,MAAAA,OAAO,EAAE,KANA;AAOTT,MAAAA,GAAG,EAAE,IAPI;AAQTC,MAAAA,GAAG,EAAE;AARI,KAAb;AAWH;;AAQDS,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKC,KAAL,CAAWZ,GAAX,KAAmBW,SAAS,CAACX,GAAjC,EAAsC;AAKtC,YAAMA,GAAG,GAAG,KAAKG,KAAL,CAAWH,GAAvB;AACA,YAAMC,GAAG,GAAG,KAAKE,KAAL,CAAWF,GAAvB;AAGAY,MAAAA,KAAK,iHAA2Gb,GAA3G,cAAkHC,GAAlH,EAAL,CACCa,IADD,CACOC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADlB,EAECF,IAFD,CAEOG,QAAQ,IAAI;AACf,aAAKf,QAAL,CAAe;AACXE,UAAAA,WAAW,EAAEa,QAAQ,CAACC,SAAT,CAAmBd,WADrB;AAEXC,UAAAA,QAAQ,EAAEY,QAAQ,CAACC,SAAT,CAAmBb,QAFlB;AAGXG,UAAAA,IAAI,EAAES,QAAQ,CAACC,SAAT,CAAmBC,SAHd;AAIXC,UAAAA,IAAI,EAAEH,QAAQ,CAACC,SAAT,CAAmBE,IAJd;AAKXd,UAAAA,UAAU,EAAEW,QAAQ,CAACC,SAAT,CAAmBZ,UALpB;AAMXC,UAAAA,iBAAiB,EAAEU,QAAQ,CAACC,SAAT,CAAmBX,iBAN3B;AAOXE,UAAAA,OAAO,EAAEQ,QAAQ,CAACC,SAAT,CAAmBT;AAPjB,SAAf;AAUAY,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYtB,GAAZ,EAAgBC,GAAhB;AAEH,OAhBD;AAiBH;AACA;;AAEDsB,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACA,MAAA,MAAM,EAAI,KAAKxB,MADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,cAAD;AACI,MAAA,IAAI,EAAI,KAAKI,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAOK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKA,KAAL,CAAWH,GAAhB,MAPL,CADJ;AAYH;;AAjEgC;;AAoErC,eAAeJ,OAAf","sourcesContent":["import React from 'react'\nimport SearchBar from './SearchBar'\nimport WeatherDisplay from './WeatherDisplay'\n\nclass Display extends React.Component{\n    constructor () {\n        super()\n        this.state = {\n            temperature : '10',\n            humidity: '0.65',\n            precipType: 'rain',\n            precipProbability: '0.9',\n            wind: '5.59',\n            summary: 'bad',\n            lat: '10',\n            lng: '11',\n            \n        }\n    }\n\n     \n    update = ({lat,lng}) => {\n        this.setState({\n            lat,lng\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.lat !== prevProps.lat) {\n            \n        \n    \n     \n        const lat = this.state.lat;\n        const lng = this.state.lng;\n        \n\n        fetch (`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/db3b0ba27138ac7fdc854f5529ba7e78/${lat},${lng}`)\n        .then (results => results.json())\n        .then (response => {\n            this.setState ({\n                temperature: response.currently.temperature,\n                humidity: response.currently.humidity,\n                wind: response.currently.windSpeed,\n                icon: response.currently.icon,\n                precipType: response.currently.precipType,  \n                precipProbability: response.currently.precipProbability,\n                summary: response.currently.summary,\n\n            })\n            console.log(response)\n            console.log(lat,lng)\n            \n        })\n    }\n    } \n    \n    render () {\n        return (\n            <div>\n                <SearchBar \n                update = {this.update} \n                />\n                <WeatherDisplay \n                    data = {this.state}\n                />\n                 <p> {this.state.lat} </p>\n            </div>\n            \n        )\n    }\n}\n\nexport default Display"]},"metadata":{},"sourceType":"module"}