{"ast":null,"code":"import _classCallCheck from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jeffrey/Weather-App/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Script from'react-load-script';/*global google*/var Search=/*#__PURE__*/function(_React$Component){_inherits(Search,_React$Component);function Search(props){var _this;_classCallCheck(this,Search);_this=_possibleConstructorReturn(this,_getPrototypeOf(Search).call(this,props));_this.handleScriptLoad=function(){var options={types:['(cities)']};_this.autocomplete=new google.maps.places.Autocomplete(document.getElementById('autocomplete'),options);_this.autocomplete.setFields(['geometry']);//limit field to geometry\n};_this.handleSubmit=function(event){var addressObject=_this.autocomplete.getPlace();_this.props.update({lat:addressObject.geometry.location.lat(),lng:addressObject.geometry.location.lng()});/*console.log (addressObject.geometry.location.lng()) */event.preventDefault();};_this.state={lat:'',lng:''};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(Search,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Script,{url:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCnqBcICpcIUF4OcyIjqIEoIMXYOXqZnG8&libraries=places\",onLoad:this.handleScriptLoad}),React.createElement(\"div\",{className:\"search-box\"},React.createElement(\"form\",{className:\"form\",onSubmit:this.handleSubmit},React.createElement(\"input\",{className:\"search-text\",type:\"textbox\",id:\"autocomplete\",placeholder:\"Type your city\"}),React.createElement(\"button\",null,React.createElement(\"img\",{src:\"https://cdn.imgbin.com/17/18/14/imgbin-computer-icons-search-box-button-button-EJe5CdpnFg2GQA6h6PpqD5L9X.jpg\"})))));}}]);return Search;}(React.Component);export default Search;","map":{"version":3,"sources":["/home/jeffrey/Weather-App/src/SearchBar.js"],"names":["React","Script","Search","props","handleScriptLoad","options","types","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","handleSubmit","event","addressObject","getPlace","update","lat","geometry","location","lng","preventDefault","state","bind","Component"],"mappings":"sqBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,iB,GAEMC,CAAAA,M,4EACF,gBAAYC,KAAZ,CAAmB,wCACjB,wEAAMA,KAAN,GADiB,MAUnBC,gBAVmB,CAUA,UAAM,CACvB,GAAMC,CAAAA,OAAO,CAAG,CACdC,KAAK,CAAE,CAAC,UAAD,CADO,CAAhB,CAIC,MAAKC,YAAL,CAAoB,GAAIC,CAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACnBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADmB,CAEnBR,OAFmB,CAApB,CAID,MAAKE,YAAL,CAAkBO,SAAlB,CAA4B,CAAC,UAAD,CAA5B,EAA0C;AAG3C,CAtBkB,OAwBnBC,YAxBmB,CAwBJ,SAACC,KAAD,CAAW,CACxB,GAAMC,CAAAA,aAAa,CAAG,MAAKV,YAAL,CAAkBW,QAAlB,EAAtB,CACE,MAAKf,KAAL,CAAWgB,MAAX,CACE,CACEC,GAAG,CAAEH,aAAa,CAACI,QAAd,CAAuBC,QAAvB,CAAgCF,GAAhC,EADP,CAEEG,GAAG,CAAEN,aAAa,CAACI,QAAd,CAAuBC,QAAvB,CAAgCC,GAAhC,EAFP,CADF,EAMF,wDACAP,KAAK,CAACQ,cAAN,GAED,CAnCkB,CAEjB,MAAKC,KAAL,CAAa,CACXL,GAAG,CAAE,EADM,CAEXG,GAAG,CAAE,EAFM,CAAb,CAIA,MAAKR,YAAL,CAAoB,MAAKA,YAAL,CAAkBW,IAAlB,+BAApB,CANiB,aAQlB,C,0DA8BQ,CACL,MACE,gCACE,oBAAC,MAAD,EACE,GAAG,CAAC,sGADN,CAEE,MAAM,CAAE,KAAKtB,gBAFf,EADF,CAKE,2BAAK,SAAS,CAAG,YAAjB,EACE,4BAAM,SAAS,CAAG,MAAlB,CAAyB,QAAQ,CAAI,KAAKW,YAA1C,EACE,6BAAO,SAAS,CAAG,aAAnB,CAAgC,IAAI,CAAG,SAAvC,CAAiD,EAAE,CAAC,cAApD,CAAmE,WAAW,CAAC,gBAA/E,EADF,CAGE,kCAAQ,2BAAK,GAAG,CAAG,8GAAX,EAAR,CAHF,CADF,CALF,CADF,CAgBD,C,oBAxDcf,KAAK,CAAC2B,S,EA2D3B,cAAezB,CAAAA,MAAf","sourcesContent":["import React from 'react'\n\nimport Script from 'react-load-script';\n/*global google*/\n\nclass Search extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        lat: '',\n        lng: ''\n      }\n      this.handleSubmit = this.handleSubmit.bind(this)\n  \n    }\n  \n    handleScriptLoad = () => {\n      const options = {\n        types: ['(cities)'],\n      };\n  \n       this.autocomplete = new google.maps.places.Autocomplete(\n        document.getElementById('autocomplete'),\n        options,\n      );\n      this.autocomplete.setFields(['geometry']) //limit field to geometry\n\n      \n    }\n    \n    handleSubmit = (event) => {\n      const addressObject = this.autocomplete.getPlace();\n        this.props.update(\n          {\n            lat: addressObject.geometry.location.lat(),\n            lng: addressObject.geometry.location.lng(),\n          }\n        );\n      /*console.log (addressObject.geometry.location.lng()) */\n      event.preventDefault()\n      \n    }\n    \n  \n    render() {\n        return (\n          <div>\n            <Script\n              url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCnqBcICpcIUF4OcyIjqIEoIMXYOXqZnG8&libraries=places\"\n              onLoad={this.handleScriptLoad}\n            />\n            <div className = 'search-box'>\n              <form className = 'form' onSubmit = {this.handleSubmit}>\n                <input className = 'search-text'type = 'textbox' id=\"autocomplete\" placeholder=\"Type your city\"  \n                />\n                <button><img src = 'https://cdn.imgbin.com/17/18/14/imgbin-computer-icons-search-box-button-button-EJe5CdpnFg2GQA6h6PpqD5L9X.jpg'></img> \n                </button>\n              </form>\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}